% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interfaceRandomForest.R
\name{forestFeatures}
\alias{forestFeatures}
\alias{forestFeatures,randomForest-method}
\title{Extract Vectors of Ranked and Selected Features From a Random Forest Object}
\usage{
forestFeatures(forest, ...)
}
\arguments{
\item{forest}{A trained random forest which was created by
\code{\link{randomForest}}.}
}
\value{
An \code{list} object. The first element is a vector or data frame
of features, ranked from best to worst using the Gini index. The second
element is a vector or data frame of features used in at least one tree.
}
\description{
Provides a ranking of features based on the total decrease in node
impurities from splitting on the variable, averaged over all trees. Also
provides the selected features which are those that were used in at least
one tree of the forest.
}
\examples{

 if(require(randomForest))
 {
    # Genes 76 to 100 have differential expression.
    genesMatrix <- sapply(1:100, function(sample) rnorm(25, 9, 0.3))
    genesMatrix <- rbind(genesMatrix, t(sapply(1:25, function(sample)
                                      c(rnorm(75, 9, 0.3), rnorm(25, 14, 0.3)))))
    classes <- factor(rep(c("Poor", "Good"), each = 25))
    rownames(genesMatrix) <- paste("Sample", 1:nrow(genesMatrix))
    colnames(genesMatrix) <- paste("Gene", 1:ncol(genesMatrix))
    trainingSamples <- c(1:20, 26:45)
    testingSamples <- c(21:25, 46:50)

    trained <- randomForestTrainInterface(genesMatrix[trainingSamples, ],
                                          classes[trainingSamples], ntree = 10)

    forestFeatures(trained)
 }

}
\author{
Dario Strbenac
}
