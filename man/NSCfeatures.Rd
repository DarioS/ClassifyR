% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NSCfeatures.R
\name{NSCfeatures}
\alias{NSCfeatures}
\alias{NSCfeatures,pamrtrained-method}
\title{Interface for \code{pamr.listgenes} Function from \code{pamr} CRAN Package}
\usage{
NSCfeatures(trained, measurements, classes)
}
\arguments{
\item{trained}{The output of \code{\link{NSCtrainInterface}}, which is
identical to the output of \code{\link[pamr]{pamr.listgenes}}.}

\item{measurements}{A \code{\link{DataFrame}} containing the training data.}

\item{classes}{A vector of class labels of class \code{\link{factor}} of the
same length as the number of samples in \code{measurements}.}
}
\value{
A list with the first element being empty (no feature ranking is
provided) and second element being the selected features.
}
\description{
Extracts the threshold for the minimum training error and then extracts the
corresponding gene IDs of the genes that were not eliminated by the
thresold.
}
\details{
When used within ClassifyR cross-validation, the trained model, measurements
and classes will automatically be passed to this function in each iteration.
}
\examples{

  if(require(pamr))
  {
    # Genes 76 to 100 have differential expression.
    genesMatrix <- sapply(1:25, function(geneColumn) c(rnorm(100, 9, 1)))
    genesMatrix <- cbind(genesMatrix, sapply(1:25, function(geneColumn)
                                 c(rnorm(75, 9, 1), rnorm(25, 14, 1))))
    rownames(genesMatrix) <- paste("Gene", 1:nrow(genesMatrix))                                 
    classes <- factor(rep(c("Poor", "Good"), each = 25))
    
    trained <- NSCtrainInterface(genesMatrix, classes)
    # ClassifyR framework internally uses DataFrames for measurements storage.
    selected <- NSCfeatures(trained, DataFrame(t(genesMatrix), check.names = FALSE), classes)
    selected[[2]]                                                       
  }

}
\seealso{
\code{\link[pamr]{pamr.listgenes}} for the function that is
interfaced to.
}
\author{
Dario Strbenac
}
